// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarAccessoryModule.proto

#include "CarAccessoryModule.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace CarAccessoryModule {
constexpr ButtonStatus::ButtonStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ispressed_(false){}
struct ButtonStatusDefaultTypeInternal {
  constexpr ButtonStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ButtonStatusDefaultTypeInternal() {}
  union {
    ButtonStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ButtonStatusDefaultTypeInternal _ButtonStatus_default_instance_;
constexpr ButtonCommand::ButtonCommand(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(0)
{}
struct ButtonCommandDefaultTypeInternal {
  constexpr ButtonCommandDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ButtonCommandDefaultTypeInternal() {}
  union {
    ButtonCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ButtonCommandDefaultTypeInternal _ButtonCommand_default_instance_;
constexpr ButtonError::ButtonError(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : presscount_(0u){}
struct ButtonErrorDefaultTypeInternal {
  constexpr ButtonErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ButtonErrorDefaultTypeInternal() {}
  union {
    ButtonError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ButtonErrorDefaultTypeInternal _ButtonError_default_instance_;
}  // namespace CarAccessoryModule
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_CarAccessoryModule_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_CarAccessoryModule_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_CarAccessoryModule_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_CarAccessoryModule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CarAccessoryModule::ButtonStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CarAccessoryModule::ButtonStatus, ispressed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CarAccessoryModule::ButtonCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CarAccessoryModule::ButtonCommand, command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CarAccessoryModule::ButtonError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CarAccessoryModule::ButtonError, presscount_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CarAccessoryModule::ButtonStatus)},
  { 6, -1, sizeof(::CarAccessoryModule::ButtonCommand)},
  { 12, -1, sizeof(::CarAccessoryModule::ButtonError)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CarAccessoryModule::_ButtonStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CarAccessoryModule::_ButtonCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CarAccessoryModule::_ButtonError_default_instance_),
};

const char descriptor_table_protodef_CarAccessoryModule_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030CarAccessoryModule.proto\022\022CarAccessory"
  "Module\"!\n\014ButtonStatus\022\021\n\tisPressed\030\001 \001("
  "\010\"a\n\rButtonCommand\022:\n\007command\030\001 \001(\0162).Ca"
  "rAccessoryModule.ButtonCommand.Command\"\024"
  "\n\007Command\022\t\n\005PRESS\020\000\"!\n\013ButtonError\022\022\n\np"
  "ressCount\030\001 \001(\rB>Z!../internal/pkg/ba_pr"
  "oto;ba_proto\252\002\030Google.Protobuf.ba_protob"
  "\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_CarAccessoryModule_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CarAccessoryModule_2eproto = {
  false, false, 287, descriptor_table_protodef_CarAccessoryModule_2eproto, "CarAccessoryModule.proto", 
  &descriptor_table_CarAccessoryModule_2eproto_once, nullptr, 0, 3,
  schemas, file_default_instances, TableStruct_CarAccessoryModule_2eproto::offsets,
  file_level_metadata_CarAccessoryModule_2eproto, file_level_enum_descriptors_CarAccessoryModule_2eproto, file_level_service_descriptors_CarAccessoryModule_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_CarAccessoryModule_2eproto_getter() {
  return &descriptor_table_CarAccessoryModule_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_CarAccessoryModule_2eproto(&descriptor_table_CarAccessoryModule_2eproto);
namespace CarAccessoryModule {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ButtonCommand_Command_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CarAccessoryModule_2eproto);
  return file_level_enum_descriptors_CarAccessoryModule_2eproto[0];
}
bool ButtonCommand_Command_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ButtonCommand_Command ButtonCommand::PRESS;
constexpr ButtonCommand_Command ButtonCommand::Command_MIN;
constexpr ButtonCommand_Command ButtonCommand::Command_MAX;
constexpr int ButtonCommand::Command_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class ButtonStatus::_Internal {
 public:
};

ButtonStatus::ButtonStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CarAccessoryModule.ButtonStatus)
}
ButtonStatus::ButtonStatus(const ButtonStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ispressed_ = from.ispressed_;
  // @@protoc_insertion_point(copy_constructor:CarAccessoryModule.ButtonStatus)
}

inline void ButtonStatus::SharedCtor() {
ispressed_ = false;
}

ButtonStatus::~ButtonStatus() {
  // @@protoc_insertion_point(destructor:CarAccessoryModule.ButtonStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ButtonStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ButtonStatus::ArenaDtor(void* object) {
  ButtonStatus* _this = reinterpret_cast< ButtonStatus* >(object);
  (void)_this;
}
void ButtonStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ButtonStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ButtonStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CarAccessoryModule.ButtonStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ispressed_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ButtonStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isPressed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ispressed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ButtonStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CarAccessoryModule.ButtonStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isPressed = 1;
  if (this->_internal_ispressed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ispressed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CarAccessoryModule.ButtonStatus)
  return target;
}

size_t ButtonStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CarAccessoryModule.ButtonStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool isPressed = 1;
  if (this->_internal_ispressed() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ButtonStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ButtonStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ButtonStatus::GetClassData() const { return &_class_data_; }

void ButtonStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ButtonStatus *>(to)->MergeFrom(
      static_cast<const ButtonStatus &>(from));
}


void ButtonStatus::MergeFrom(const ButtonStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CarAccessoryModule.ButtonStatus)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ispressed() != 0) {
    _internal_set_ispressed(from._internal_ispressed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ButtonStatus::CopyFrom(const ButtonStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CarAccessoryModule.ButtonStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ButtonStatus::IsInitialized() const {
  return true;
}

void ButtonStatus::InternalSwap(ButtonStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ispressed_, other->ispressed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ButtonStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_CarAccessoryModule_2eproto_getter, &descriptor_table_CarAccessoryModule_2eproto_once,
      file_level_metadata_CarAccessoryModule_2eproto[0]);
}

// ===================================================================

class ButtonCommand::_Internal {
 public:
};

ButtonCommand::ButtonCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CarAccessoryModule.ButtonCommand)
}
ButtonCommand::ButtonCommand(const ButtonCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:CarAccessoryModule.ButtonCommand)
}

inline void ButtonCommand::SharedCtor() {
command_ = 0;
}

ButtonCommand::~ButtonCommand() {
  // @@protoc_insertion_point(destructor:CarAccessoryModule.ButtonCommand)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ButtonCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ButtonCommand::ArenaDtor(void* object) {
  ButtonCommand* _this = reinterpret_cast< ButtonCommand* >(object);
  (void)_this;
}
void ButtonCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ButtonCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ButtonCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:CarAccessoryModule.ButtonCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ButtonCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CarAccessoryModule.ButtonCommand.Command command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_command(static_cast<::CarAccessoryModule::ButtonCommand_Command>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ButtonCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CarAccessoryModule.ButtonCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CarAccessoryModule.ButtonCommand.Command command = 1;
  if (this->_internal_command() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CarAccessoryModule.ButtonCommand)
  return target;
}

size_t ButtonCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CarAccessoryModule.ButtonCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CarAccessoryModule.ButtonCommand.Command command = 1;
  if (this->_internal_command() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_command());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ButtonCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ButtonCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ButtonCommand::GetClassData() const { return &_class_data_; }

void ButtonCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ButtonCommand *>(to)->MergeFrom(
      static_cast<const ButtonCommand &>(from));
}


void ButtonCommand::MergeFrom(const ButtonCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CarAccessoryModule.ButtonCommand)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_command() != 0) {
    _internal_set_command(from._internal_command());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ButtonCommand::CopyFrom(const ButtonCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CarAccessoryModule.ButtonCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ButtonCommand::IsInitialized() const {
  return true;
}

void ButtonCommand::InternalSwap(ButtonCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(command_, other->command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ButtonCommand::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_CarAccessoryModule_2eproto_getter, &descriptor_table_CarAccessoryModule_2eproto_once,
      file_level_metadata_CarAccessoryModule_2eproto[1]);
}

// ===================================================================

class ButtonError::_Internal {
 public:
};

ButtonError::ButtonError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CarAccessoryModule.ButtonError)
}
ButtonError::ButtonError(const ButtonError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  presscount_ = from.presscount_;
  // @@protoc_insertion_point(copy_constructor:CarAccessoryModule.ButtonError)
}

inline void ButtonError::SharedCtor() {
presscount_ = 0u;
}

ButtonError::~ButtonError() {
  // @@protoc_insertion_point(destructor:CarAccessoryModule.ButtonError)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ButtonError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ButtonError::ArenaDtor(void* object) {
  ButtonError* _this = reinterpret_cast< ButtonError* >(object);
  (void)_this;
}
void ButtonError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ButtonError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ButtonError::Clear() {
// @@protoc_insertion_point(message_clear_start:CarAccessoryModule.ButtonError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  presscount_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ButtonError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 pressCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          presscount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ButtonError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CarAccessoryModule.ButtonError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pressCount = 1;
  if (this->_internal_presscount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_presscount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CarAccessoryModule.ButtonError)
  return target;
}

size_t ButtonError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CarAccessoryModule.ButtonError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 pressCount = 1;
  if (this->_internal_presscount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_presscount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ButtonError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ButtonError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ButtonError::GetClassData() const { return &_class_data_; }

void ButtonError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ButtonError *>(to)->MergeFrom(
      static_cast<const ButtonError &>(from));
}


void ButtonError::MergeFrom(const ButtonError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CarAccessoryModule.ButtonError)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_presscount() != 0) {
    _internal_set_presscount(from._internal_presscount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ButtonError::CopyFrom(const ButtonError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CarAccessoryModule.ButtonError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ButtonError::IsInitialized() const {
  return true;
}

void ButtonError::InternalSwap(ButtonError* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(presscount_, other->presscount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ButtonError::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_CarAccessoryModule_2eproto_getter, &descriptor_table_CarAccessoryModule_2eproto_once,
      file_level_metadata_CarAccessoryModule_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace CarAccessoryModule
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CarAccessoryModule::ButtonStatus* Arena::CreateMaybeMessage< ::CarAccessoryModule::ButtonStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CarAccessoryModule::ButtonStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::CarAccessoryModule::ButtonCommand* Arena::CreateMaybeMessage< ::CarAccessoryModule::ButtonCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CarAccessoryModule::ButtonCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::CarAccessoryModule::ButtonError* Arena::CreateMaybeMessage< ::CarAccessoryModule::ButtonError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CarAccessoryModule::ButtonError >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
